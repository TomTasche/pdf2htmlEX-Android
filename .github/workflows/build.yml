name: Build
on: push

env:
  ANDROID_SDK_TOOLS:  "4333796"
  ANDROID_NDK:        "20.1.5948944"
  ANDROID_CMAKE:      "3.10.2.4988404"
  TARBALL_CACHE_KEY:  "tarballs-key-1"

jobs:
  tarballCacher:
    if: false
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1

      - name: Cache tarballs
        uses: actions/cache@v1
        with:
          key: ${{ env.TARBALL_CACHE_KEY }}
          path: dependency-builder/src/main/cpp/tarballs

      - run: ./dodownloadtarballs --serial

  debug:
    #needs: tarballCacher
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        abi: [ x86, x86_64, armeabi-v7a, arm64-v8a ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache android-sdk.zip
        uses: actions/cache@v1
        with:
          key: android-sdk.zip-${{ env.ANDROID_SDK_TOOLS }}
          path: android-sdk

      - run: .github/installAndroidTools.sh

      - run: .github/installBuildDependencies.sh

      - name: Cache tarballs
        uses: actions/cache@v1
        with:
          key: ${{ env.TARBALL_CACHE_KEY }}
          path: dependency-builder/src/main/cpp/tarballs

      - run: ./dodownloadtarballs --serial

      - name: Build pdf2htmlEX-Android
        run: ./gradlew assembleDebug -PdisablePreDex -Pabi=${{ matrix.abi }}

  release:
    #needs: tarballCacher
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        abi: [ x86, x86_64, armeabi-v7a, arm64-v8a ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache android-sdk.zip
        uses: actions/cache@v1
        with:
          key: android-sdk.zip-${{ env.ANDROID_SDK_TOOLS }}
          path: android-sdk

      - run: .github/installAndroidTools.sh

      - run: .github/installBuildDependencies.sh

      - name: Cache tarballs
        uses: actions/cache@v1
        with:
          key: ${{ env.TARBALL_CACHE_KEY }}
          path: dependency-builder/src/main/cpp/tarballs

      - run: ./dodownloadtarballs --serial

      - name: Build pdf2htmlEX-Android
        run: ./gradlew assembleRelease -PdisablePreDex -Pabi=${{ matrix.abi }}

      - name: Gather licenses
        if: matrix.abi == 'armeabi-v7a'
        run: ./gradlew dependency-builder:gatherLicenses -PdisablePreDex -Pabi=${{ matrix.abi }}

      - name: Artifact gathered licenses
        if: matrix.abi == 'armeabi-v7a'
        uses: actions/upload-artifact@v1
        with:
          name: licenses-${{ matrix.abi }}
          path: dependency-builder/build/licenses.xml

      - name: Prepare built dependencies for artifacting
        run: |
          mkdir --parents pdeps/bin
          mv dependency-builder/build/installed/MinSizeRel/${{ matrix.abi }}/bin/pkg-config pdeps/bin/
          mv dependency-builder/build/installed/MinSizeRel/${{ matrix.abi }}/include pdeps/
          mv dependency-builder/build/installed/MinSizeRel/${{ matrix.abi }}/lib pdeps/
          mv dependency-builder/build/installed/MinSizeRel/${{ matrix.abi }}/share/pkgconfig pdeps/share/

      - name: Artifact built dependencies
        uses: actions/upload-artifact@v1
        with:
          name: dependencies-${{ matrix.abi }}
          path: pdeps

      - name: Artifact assets (from pdf2htmlEX and poppler)
        if: matrix.abi == 'armeabi-v7a'
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: dependency-builder/build/assets

  releaseAllABIs:
    needs: release
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache android-sdk.zip
        uses: actions/cache@v1
        with:
          key: android-sdk.zip-${{ env.ANDROID_SDK_TOOLS }}
          path: android-sdk

      - run: .github/installAndroidTools.sh

      - name: Cache tarballs
        uses: actions/cache@v1
        with:
          key: ${{ env.TARBALL_CACHE_KEY }}
          path: dependency-builder/src/main/cpp/tarballs

      - run: ./dodownloadtarballs --serial

      - name: Download artifacted dependencies - x86
        uses: actions/download-artifact@v1
        with:
          name: dependencies-x86
          path: dependency-builder/build/installed/MinSizeRel/x86
      - run: chmod +x dependency-builder/build/installed/MinSizeRel/x86/bin/pkg-config

      - name: Download artifacted dependencies - x86_64
        uses: actions/download-artifact@v1
        with:
          name: dependencies-x86_64
          path: dependency-builder/build/installed/MinSizeRel/x86_64
      - run: chmod +x dependency-builder/build/installed/MinSizeRel/x86_64/bin/pkg-config

      - name: Download artifacted dependencies - armeabi-v7a
        uses: actions/download-artifact@v1
        with:
          name: dependencies-armeabi-v7a
          path: dependency-builder/build/installed/MinSizeRel/armeabi-v7a
      - run: chmod +x dependency-builder/build/installed/MinSizeRel/armeabi-v7a/bin/pkg-config

      - name: Download artifacted dependencies - arm64-v8a
        uses: actions/download-artifact@v1
        with:
          name: dependencies-arm64-v8a
          path: dependency-builder/build/installed/MinSizeRel/arm64-v8a
      - run: chmod +x dependency-builder/build/installed/MinSizeRel/arm64-v8a/bin/pkg-config

      - name: Download artifacted assets
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: dependency-builder/build/assets

      - name: Download artifacted licenses
        uses: actions/download-artifact@v1
        with:
          name: licenses-armeabi-v7a
          path: dependency-builder/build/

      - name: Build pdf2htmlEX-Android
        run: ./gradlew assembleRelease -PdisablePreDex

      - name: Publish to maven local
        run: ./gradlew publishToMavenLocal

      - name: Prepare sample app
        run: .github/prepareSampleAppForUnpublishedLib.sh

      - name: Build sample app from unpublished library
        run: |
          cd android-sample-app
          ./gradlew build

      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(./getVersion.sh)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: "pdf2htmlEX-Android v${{ steps.get_version.outputs.version }} - ${{ github.event.commits[0].message }}"
          draft: true
          prerelease: false

      - name: Upload licenses
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dependency-builder/build/licenses.xml
          asset_name: licenses.xml
          asset_content_type: text/xml

      - name: Upload aar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/outputs/aar/pdf2htmlex-android-release.aar
          asset_name: pdf2htmlex-android-release.aar
          asset_content_type: application/zip

      - name: Generate javadoc
        run: ./gradlew pdf2htmlEX:javadocJar

      - name: Upload javadoc.jar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/libs/pdf2htmlex-android-${{steps.get_version.outputs.version}}-javadoc.jar
          asset_name: pdf2htmlex-android-${{steps.get_version.outputs.version}}-javadoc.jar
          asset_content_type: application/zip

      - name: Jar the sources
        run: ./gradlew pdf2htmlEX:sourceJar

      - name: Upload sources.jar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/libs/pdf2htmlex-android-${{steps.get_version.outputs.version}}-sources.jar
          asset_name: pdf2htmlex-android-${{steps.get_version.outputs.version}}-sources.jar
          asset_content_type: application/zip
